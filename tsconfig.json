{
    "include": ["src"],
    "compilerOptions": {
        "outDir": "build",
        "target": "ES6",//타겟 세팅은 어떤 자바스크립트의 기능이 다운 레벨 되는지를 바꾼다. //ES3를 타겟으로 설정 시 클래스를 받아 함수로 다운그레이드 했다.
        "lib": ["ES6", "dom"] ,// Specify a set of bundled library 2) declaration files that 1) describe the target runtime environment.
        "strict": true

        // 1) describe the target runtime environment.
        // 목표로 하는 런타임 환경을 정의한다. => js코드가 어디서 동작할 지 알려준다.
        // DOM은 브라우저 환경에서 실행한다는 점을 알려준다.
        // 사용법 ex, DOM을 설정하고 타입스크립트 파일을 작성하면 자동완성 기능을 제공해준다. => document.queryElementId() 
        // => ts가 document가 뭔지 알고 있다는 뜻. document가 가지고 있는 모든 이벤트와 메소드를 보여주고 있다.
        // => ts에게 너의 코드가 어디서 실행될지를 알려준다.( == 어디서 런타임 될지를 알려준다);

        /*
        https://joshua1988.github.io/ts/config/tsconfig.html#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%84%A4%EC%A0%95-%ED%8C%8C%EC%9D%BC-%EC%86%8D%EC%84%B1
        - 타입스크립트 핸드북
        타입스크립트 파일을 자바스크립트로 컴파일 할 때 포함될 라이브러리의 목록입니다. 
        이 속성을 활용하는 가장 대표적인 사례는 async 코드를 컴파일 할 때 Promise 객체가 필요하므로 아래와 같은 설정을 해줘야 합니다.
            // tsconfig.json
        {
            "lib": ["es2015", "dom", "dom.iterable"]
        }
        여기서 es2015는 프로미스 객체를 타입스크립트에서 인식할 수 있게 필요한 속성이고, dom 관련 속성은 DOM API를 사용하는 경우 필요합니다
        */
        

        // 2) declaration files
        // 타입스크립트가 기본적인 타입 정의는 가지고 있다. 타입정의란 몇몇 자바스크립트 코드의 타입을 설명 해주기 위해 사용.
        // 자바스크립트를 프레임워크나 라이브러리를 이용해 사용하기 때문에 자바스크립트로 만들어진 라이브러리를 ts project에 쓰려고 한다면 ts는 알 수 없다. 
        // 자바스크립트 라이브러리를 사용하려면 ts에게 js파일들의 타입을 설명해주어야 한다.

        ,
        "allowJs": true
        ,
        // "esModuleInterop": true, 
        "module": "CommonJS"
        
        
        



    }
}